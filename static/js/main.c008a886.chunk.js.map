{"version":3,"sources":["components/Header/Header.jsx","components/Card/Card.jsx","pages/Home.jsx","pages/SelectedCountry.jsx","utils/Data.js","utils/Filters.js","App.jsx","index.js"],"names":["Header","props","className","theme","to","onClick","restart","type","onChange","changeTheme","Card","handleClick","card","id","data-category","name","src","image","alt","label","Home","cards","data","map","Math","random","action","value","order","handleSort","sort","placeholder","filterQuery","handleChange","aria-label","handleSearch","SelectedCountry","subRegion","region","capital","x","population","toString","replace","obj","languagesArray","forEach","item","push","getLanguages","languages","Data","getData","fetch","response","json","filteredData","flag","subregion","callingCodes","area","searchCountry","term","Filters","nameAscending","arr","a","b","nameDescending","populationAscending","populationDescending","App","useState","setTheme","setData","sortedData","setSortedData","currentItem","setCurrentItem","setFilterQuery","setOrder","useEffect","then","exact","path","newOrder","e","target","filteredItem","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c008a886.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaGlobe, FaMoon, FaSun } from 'react-icons/fa'\r\nimport './Header.scss'\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={`header ${props.theme}`}>\r\n            <div className=\"header__container\">\r\n                <Link\r\n                    to=\"/\" \r\n                    onClick={props.restart}\r\n                >\r\n                    <h1 className=\"header__container__title\">\r\n                        <span className=\"header__container__title-span\">\r\n                        React Countries\r\n                        </span>\r\n                        <FaGlobe className={`icon ${props.theme}`} />\r\n                    </h1>\r\n                </Link>\r\n                <div className=\"header__container__theme-switch\">\r\n                    <FaMoon />\r\n                    <label className=\"switch\">\r\n                        <input \r\n                            type=\"checkbox\"\r\n                            onChange={props.changeTheme}\r\n                        />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                    <FaSun />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./Card.scss\"\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <Link\r\n            to=\"/selectedcountry\" \r\n            className=\"cards-item-link\"\r\n            onClick={() => {props.handleClick(props.card.id)}}\r\n        >\r\n            <figure\r\n                className=\"cards-item-pic-wrap\"\r\n                data-category={props.card.name}\r\n            >\r\n                <img\r\n                    src={props.card.image}\r\n                    alt={props.card.label}\r\n                    className=\"cards-item-img\"\r\n                />\r\n            </figure>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Card\r\n\r\n","import React from 'react'\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport { MdSort } from 'react-icons/md'\r\nimport Card from '../components/Card/Card'\r\n\r\nconst Home = (props) => {\r\n\r\n    // Variable cards is used to dispaly every object within the props.data array as an individual country\r\n    const cards = props.data.map(card => {\r\n        return <Card\r\n            key={Math.random()}\r\n            card={card}\r\n            handleClick={props.handleClick}\r\n        />\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <form action=\"#\" className=\"App__filter\">\r\n                <div className=\"App__filter-area\">\r\n                    <select\r\n                        value={props.order}\r\n                        name=\"order\"\r\n                        onChange={props.handleSort}\r\n                    >\r\n                        <option value={0}>Please select an option</option>\r\n                        <option value={1}>Sort by ascending order (name)</option>\r\n                        <option value={2}>Sort by descending order (name)</option>\r\n                        <option value={3}>Sort by ascending order (population)</option>\r\n                        <option value={4} >Sort by descending order (population)</option>\r\n                    </select>\r\n                    <MdSort\r\n                        className={`icon ${props.theme}`}\r\n                        onClick={()=>{props.sort(props.order)}}\r\n                    />\r\n                </div>\r\n                <div className=\"App__filter__search-area\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search for a specific country by name.....\"\r\n                        name=\"filterQuery\"\r\n                        value={props.filterQuery}\r\n                        onChange={props.handleChange}\r\n                        aria-label=\"Filter countries by capital city, currency and region\"\r\n                    />\r\n                    <FaSearch\r\n                        className=\"icon\"\r\n                        onClick={() => { props.handleSearch(props.filterQuery) }}\r\n                    />\r\n                </div>\r\n            </form>\r\n            <section className=\"results-area\">\r\n                <div className=\"results-area__container\">\r\n                    {\r\n                        cards\r\n                    }\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst SelectedCountry = (props) => {\r\n\r\n    // Function is used to display all the items inside a specific countries language array, it will return each item as a <li>\r\n    function getLanguages(obj) {\r\n        let languagesArray = []\r\n\r\n        obj.forEach(item => {\r\n            languagesArray.push(<li key={Math.random()}>{item.name}</li>)\r\n        })\r\n        return languagesArray\r\n    }\r\n\r\n    // Function is used to add a comma at every 1000, in order to improve readability\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"country\">\r\n                <div className=\"country__container\">\r\n                    <div className=\"country__information__card\">\r\n                        <img\r\n                            src={props.data[0].image}\r\n                            alt={`The flag of ${props.data[0].name}`}\r\n                            className=\"country__information__image\"\r\n                        />\r\n                        <ul className={`country__information__list ${props.theme}`}>\r\n                            <li className={`country__information__list-item ${props.theme}`}>\r\n                                Name of country : {props.data[0].name}\r\n                            </li>\r\n                            <li className={`country__information__list-item ${props.theme}`}>\r\n                                Region : {props.data[0].subRegion}, {props.data[0].region}\r\n                            </li>\r\n                            <li className={`country__information__list-item ${props.theme}`}>\r\n                                Capital city : {props.data[0].capital}\r\n                            </li>\r\n                            <li className={`country__information__list-item ${props.theme}`}>\r\n                                Population : ~ {numberWithCommas(props.data[0].population)}\r\n                            </li>\r\n                            <li className={`country__information__list-item ${props.theme}`}>\r\n                                Language (s) : <ul className=\"country__information__languages\">\r\n                                    {\r\n                                        getLanguages(props.data[0].languages)\r\n                                    }\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectedCountry\r\n","const Data = {\r\n    // Gets all the countries on the API\r\n    async getData() {\r\n        const response = await fetch('https://restcountries.eu/rest/v2/all')\r\n        const data = await response.json()\r\n        const filteredData = data.map(item => {\r\n            return {\r\n                name: item.name,\r\n                image: item.flag,\r\n                region: item.region,\r\n                subRegion: item.subregion,\r\n                callingCodes: item.callingCodes,\r\n                capital: item.capital,\r\n                population: item.population,\r\n                languages: item.languages,\r\n                id: item.area\r\n            }\r\n        })\r\n        return filteredData\r\n    },\r\n    // Returns data based on the search query passed in\r\n    async searchCountry(term){\r\n        const response = await fetch(`https://restcountries.eu/rest/v2/name/${term}`)\r\n        const data = await response.json()\r\n        const filteredData = data.map(item => {\r\n            return {\r\n                name: item.name,\r\n                image: item.flag,\r\n                region: item.region,\r\n                subRegion: item.subregion,\r\n                callingCodes: item.callingCodes,\r\n                capital: item.capital,\r\n                population: item.population,\r\n                languages: item.languages,\r\n                id: item.area\r\n            }\r\n        })\r\n        return filteredData\r\n    }\r\n\r\n}\r\n\r\nexport default Data","const Filters = {\r\n    // Sorts countries by name (asc)\r\n    nameAscending(arr){\r\n        const newOrder = arr.sort((a,b) => a.name > b.name? 1:-1)\r\n        return newOrder\r\n    },\r\n    // Sorts countries by name (des)\r\n    nameDescending(arr){\r\n        const newOrder = arr.sort((a,b) => a.name < b.name? 1:-1)\r\n        return newOrder\r\n    },\r\n    // Sorts countries by population (asc)\r\n    populationAscending(arr){\r\n        const newOrder = arr.sort((a,b) => a.population > b.population? 1:-1)\r\n        return newOrder\r\n    },\r\n    // Sorts countries by population (des)\r\n    populationDescending(arr){\r\n        const newOrder = arr.sort((a,b) => a.population < b.population? 1:-1)\r\n        return newOrder\r\n    },\r\n\r\n}\r\n\r\nexport default Filters","import React, { useState, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Header from './components/Header/Header'\nimport Home from './pages/Home'\nimport SelectedCountry from './pages/SelectedCountry'\nimport Data from './utils/Data'\nimport Filters from './utils/Filters'\nimport './App.scss'\n\n\nconst App = () => {\n    \n    const [theme, setTheme] = useState(\"dark\")\n    const [data, setData] = useState([])\n    const [sortedData, setSortedData] = useState([])\n    const [currentItem, setCurrentItem] = useState([])\n    const [filterQuery, setFilterQuery] = useState('')\n    const [order, setOrder] = useState(0)\n\n    // Gets all the initial country data from the API as soon as the component mounts\n    useEffect(() => {\n        Data.getData().then((response) => {\n            setData(response)\n        })\n    }, [])\n\n    // Toggles the theme from dark to light\n    const changeTheme = () => {\n        theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\")\n    }\n\n    // Captures the input from the search text box and stores the value as state\n    const handleChange = (e) => {\n        const { value } = e.target\n        setFilterQuery(value)\n    }\n    // Captures the selection option from the select box and stores the value in state\n    const handleSort = (e) => {\n        setOrder(e.target.value)\n    }\n    // Used to select a specific country\n    function handleClick(id) {\n        const filteredItem = data.filter(item => item.id === id)\n        setCurrentItem(filteredItem)\n    }\n    // Function takes the search query term from state as a paramter, it returns the API response and updates the data state\n    function handleSearch(term) {\n        Data.searchCountry(term).then(response => {\n            setData(response)\n        })\n    }\n    // Function used to take user from specific country page back to the home page that lists all the countries.\n    function restart() {\n        Data.getData().then((response) => {\n            setData(response)\n            setFilterQuery(\"\")\n        })\n    }\n    // Function sorts the state depending on the option thats selected in the sort selctbox\n    function sort(order) {\n        if (order === \"1\") {\n            const newOrder = Filters.nameAscending(data)\n            setSortedData(newOrder)\n        } else if (order === \"2\") {\n            const newOrder = Filters.nameDescending(data)\n            setSortedData(newOrder)\n        }\n        else if (order === \"3\") {\n            const newOrder = Filters.populationAscending(data)\n            setSortedData(newOrder)\n        }\n        else if (order === \"4\") {\n            const newOrder = Filters.populationDescending(data)\n            setSortedData(newOrder)\n        }\n        setSortedData([])\n    }\n\n    return (\n        <div className={`App App--${theme}`}>\n            <Header\n                restart={restart}\n                theme={theme}\n                changeTheme={changeTheme}\n            />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home\n                        theme={theme}\n                        data={data}\n                        sortedData={sortedData}\n                        filterQuery={filterQuery}\n                        order={order}\n                        sort={sort}\n                        handleSort={handleSort}\n                        handleChange={handleChange}\n                        handleClick={handleClick}\n                        handleSearch={handleSearch}\n                    />\n                </Route>\n                <Route path=\"/selectedcountry\">\n                    <SelectedCountry\n                        data={currentItem}\n                        theme={theme}\n                    />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter as Browser} from 'react-router-dom'\n\nReactDOM.render(\n  <Browser>\n    <App />\n  </Browser>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}